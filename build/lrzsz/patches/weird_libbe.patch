# On some other platform even more obscure than ours, it seems that there is a
# libbe that may contain the syslog() function.  This check incorrectly pulls
# libbe (for boot environments) in as a subsequently unused dependency.  Just
# drop the check.

diff -ur lrzsz-0.12.20/configure lrzsz-0.12.20/configure
--- lrzsz-0.12.20/configure	Tue Dec 29 23:50:18 1998
+++ lrzsz-0.12.20/configure	Thu Aug 12 16:23:13 2021
@@ -1745,53 +1745,6 @@
   echo "$ac_t""no" 1>&6
 fi
 
-echo $ac_n "checking for syslog in -lbe""... $ac_c" 1>&6
-echo "configure:1750: checking for syslog in -lbe" >&5
-ac_lib_var=`echo be'_'syslog | sed 'y%./+-%__p_%'`
-if eval "test \"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\" = set"; then
-  echo $ac_n "(cached) $ac_c" 1>&6
-else
-  ac_save_LIBS="$LIBS"
-LIBS="-lbe  $LIBS"
-cat > conftest.$ac_ext <<EOF
-#line 1758 "configure"
-#include "confdefs.h"
-/* Override any gcc2 internal prototype to avoid an error.  */
-/* We use char because int might match the return type of a gcc2
-    builtin and then its argument prototype would still apply.  */
-char syslog();
-
-int main() {
-syslog()
-; return 0; }
-EOF
-if { (eval echo configure:1769: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then
-  rm -rf conftest*
-  eval "ac_cv_lib_$ac_lib_var=yes"
-else
-  echo "configure: failed program was:" >&5
-  cat conftest.$ac_ext >&5
-  rm -rf conftest*
-  eval "ac_cv_lib_$ac_lib_var=no"
-fi
-rm -f conftest*
-LIBS="$ac_save_LIBS"
-
-fi
-if eval "test \"`echo '$ac_cv_lib_'$ac_lib_var`\" = yes"; then
-  echo "$ac_t""yes" 1>&6
-    ac_tr_lib=HAVE_LIB`echo be | sed -e 's/[^a-zA-Z0-9_]/_/g' \
-    -e 'y/abcdefghijklmnopqrstuvwxyz/ABCDEFGHIJKLMNOPQRSTUVWXYZ/'`
-  cat >> confdefs.h <<EOF
-#define $ac_tr_lib 1
-EOF
-
-  LIBS="-lbe $LIBS"
-
-else
-  echo "$ac_t""no" 1>&6
-fi
-
 echo $ac_n "checking for gethostbyname in -lnsl""... $ac_c" 1>&6
 echo "configure:1797: checking for gethostbyname in -lnsl" >&5
 ac_lib_var=`echo nsl'_'gethostbyname | sed 'y%./+-%__p_%'`
